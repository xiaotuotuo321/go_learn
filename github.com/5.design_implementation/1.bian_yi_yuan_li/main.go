package main



/*
目录：

1.静态单赋值 - SSA

2.指令集
	1. 复杂指令集：通过增加指令的类型减少需要执行的指令数
	2. 精简指令集：使用更少的指令类型完成目标的计算任务

3.编译原理：
	1.词法与语法分析、类型检查和SAT转换、通用SSA生成和最后的机器代码生成。
		- 词法分析返回一个不包含空格、换行等字符串的token序列
		- 语法分析会把token序列转换成有意义的结构体，语法树
	2.类型检查：对整棵语法树的遍历，检验类型。包括：结构体对接口的实现
	3.中间代码生成：经过检查的代码会存在一个编译队列中，等待着goroutine消费；经过goroutine把代码数转换成中间代码。
	4.机器代码生成：
4.编译的入口：
	Go 语言的编译器入口在 src/cmd/compile/internal/gc/main.go 文件中

第一节：词法和语法分析
	1. 词法分析：工具：lex 生成词法分析器的工具
	2. 从go到token类型，可以将元素分为几个不同的类别。分别为名称和字面量，操作符，分隔符和关键字。
第二节：语法分析
	1.
*/
